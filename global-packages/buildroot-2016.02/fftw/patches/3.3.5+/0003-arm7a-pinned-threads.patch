diff --git a/threads/threads.c b/threads/threads.c
index 3547352..7dbf7c8 100644
--- a/threads/threads.c
+++ b/threads/threads.c
@@ -22,12 +22,21 @@
    function.  The first portion of this file is a set of macros to
    spawn and join threads on various systems. */

+#ifdef __ARM_ARCH_7A__
+#  define _GNU_SOURCE
+#endif
+
 #include "threads.h"

 #if defined(USING_POSIX_THREADS)

 #include <pthread.h>

+#ifdef __ARM_ARCH_7A__
+#  include <stdio.h>
+#  include <sched.h>
+#endif
+
 #ifdef HAVE_UNISTD_H
 #  include <unistd.h>
 #endif
@@ -140,6 +149,16 @@ static void os_create_thread(FFTW_WORKER (*worker)(void *arg),
      pthread_attr_setscope(&attr, PTHREAD_SCOPE_SYSTEM);
      pthread_attr_setdetachstate(&attr, PTHREAD_CREATE_DETACHED);

+#ifdef __ARM_ARCH_7A__
+     static int cpu_id = 0;
+     cpu_id = ++cpu_id % 2;
+     printf("Pinning thread to core #%i\n", cpu_id+1);
+     cpu_set_t cpuset;
+     CPU_ZERO(&cpuset);
+     CPU_SET(cpu_id, &cpuset);
+     pthread_attr_setaffinity_np(&attr, sizeof(cpuset), &cpuset);
+#endif
+
      pthread_create(&tid, &attr, worker, (void *)arg);
      pthread_attr_destroy(&attr);
 }
diff --git a/tools/fftw-wisdom.c b/tools/fftw-wisdom.c
index 3355862..6a6ee3d 100644
--- a/tools/fftw-wisdom.c
+++ b/tools/fftw-wisdom.c
@@ -1,5 +1,9 @@
 /* Re-use libbench2 and the test program, but override bench_main so that
    we can have different command-line syntax. */
+#ifdef __ARM_ARCH_7A__
+#  define _GNU_SOURCE
+#endif
+
 #include "my-getopt.h"
 #include "bench.h"

@@ -10,6 +14,12 @@
 #include <string.h>
 #include <time.h>

+#ifdef __ARM_ARCH_7A__
+#  undef HAVE_THREADS
+#  undef HAVE_OPENMP
+#  include <sched.h>
+#endif
+
 #if defined(HAVE_THREADS) || defined(HAVE_OPENMP)
 #  define HAVE_SMP
    extern int threads_ok;
@@ -170,6 +180,13 @@ int bench_main(int argc, char *argv[])
 	user requests -T */
      threads_ok = 0;
 #endif
+#ifdef __ARM_ARCH_7A__
+     printf("NOTE: Running pinned to core #1\n");
+     cpu_set_t cpuset;
+     CPU_ZERO(&cpuset);
+     CPU_SET(0, &cpuset);
+     sched_setaffinity(0, sizeof(cpuset), &cpuset);
+#endif

      while ((c = my_getopt(argc, argv, options)) != -1) {
 	  switch (c) {
